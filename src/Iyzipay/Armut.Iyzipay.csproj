<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net45;netstandard2.0;netstandard1.3</TargetFrameworks>
		<AssemblyName>Armut.Iyzipay</AssemblyName>
		<RootNamespace>Armut.Iyzipay</RootNamespace>
		<Version>2.6.0</Version>
		<Title>Armut Iyzipay Client</Title>
		<Authors>Armut Teknoloji A.Ş.</Authors>
		<Owners>Armut Teknoloji A.Ş.</Owners>
		<Description>armut iyzipay api .net client</Description>
		<PackageProjectUrl>https://github.com/armutcom/iyzipay-dotnet-client</PackageProjectUrl>
		<PackageLicenseUrl>https://github.com/armutcom/iyzipay-dotnet-client/blob/master/LICENSE</PackageLicenseUrl>
		<RepositoryUrl>https://github.com/armutcom/iyzipay-dotnet-client</RepositoryUrl>
		<PackageIconUrl>https://armut.com/favicon.ico</PackageIconUrl>
		<Company>Armut Teknoloji A.Ş.</Company>
		<Copyright>Copyright 2018 © Armut Teknoloji A.Ş</Copyright>
		<PackageTags>iyzipay, dotnet, dotnet core, client library, iyzico</PackageTags>

		<!-- When compiling .NET SDK 2.0 projects targeting .NET 4.x on Mono using 'dotnet build' you -->
		<!-- have to teach MSBuild where the Mono copy of the reference asssemblies is -->
		<TargetIsMono Condition="$(TargetFramework.StartsWith('net4')) and '$(OS)' == 'Unix'">true</TargetIsMono>

		<BaseFrameworkPathOverrideForMono Condition="'$(BaseFrameworkPathOverrideForMono)' == '' AND '$(TargetIsMono)' == 'true' AND EXISTS('/Library/Frameworks/Mono.framework/Versions/Current/lib/mono')">/Library/Frameworks/Mono.framework/Versions/Current/lib/mono</BaseFrameworkPathOverrideForMono>
		<BaseFrameworkPathOverrideForMono Condition="'$(BaseFrameworkPathOverrideForMono)' == '' AND '$(TargetIsMono)' == 'true' AND EXISTS('/usr/lib/mono')">/usr/lib/mono</BaseFrameworkPathOverrideForMono>
		<BaseFrameworkPathOverrideForMono Condition="'$(BaseFrameworkPathOverrideForMono)' == '' AND '$(TargetIsMono)' == 'true' AND EXISTS('/usr/local/lib/mono')">/usr/local/lib/mono</BaseFrameworkPathOverrideForMono>
		<FrameworkPathOverride Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND '$(TargetFramework)' == 'net45'">$(BaseFrameworkPathOverrideForMono)/4.5</FrameworkPathOverride>
		<EnableFrameworkPathOverride Condition="'$(BaseFrameworkPathOverrideForMono)' != ''">true</EnableFrameworkPathOverride>
		<!-- Add the Facades directory.  Not sure how else to do this. Necessary at least for .NET 4.5 -->
		<AssemblySearchPaths Condition="'$(BaseFrameworkPathOverrideForMono)' != ''">$(FrameworkPathOverride)/Facades;$(AssemblySearchPaths)</AssemblySearchPaths>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Newtonsoft.Json" Version="13.0.2" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
		<Reference Include="System.Configuration" />
		<Reference Include="System" />
		<Reference Include="System.Core" />
		<Reference Include="System.Xml.Linq" />
		<Reference Include="System.Data.DataSetExtensions" />
		<Reference Include="Microsoft.CSharp" />
		<Reference Include="System.Data" />
		<Reference Include="System.Net.Http" />
		<Reference Include="System.Xml" />
	</ItemGroup>

	<ItemGroup>
		<!-- When using 'dotnet build' to compile against Mono reference assemblies it seems necessary to add some explicit references to some facade DLLs  -->
		<Reference Include="System.Runtime" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
		<Reference Include="System.IO" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
		<Reference Include="System.Net.Primitives" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
		<Reference Include="System.Threading.Tasks" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
		<Reference Include="System.Web" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
  	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
		<PackageReference Include="System.Net.WebHeaderCollection" Version="4.3.0" />
		<PackageReference Include="System.Security.Cryptography.Algorithms" Version="4.3.0" /> 
	</ItemGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
		<DefineConstants>$(DefineConstants);NETSTANDARD2</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' ">
		<DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
	</PropertyGroup>
</Project>